<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<title>Untitled Document</title>
		<script type=text/javascript charset=utf-8 src=../commons/CommonUtil.js></script>
		<script type=text/javascript charset=utf-8>
			
			//观察者模式：对程序中某一个对象的状态进行观察  当该对象的状态发生变化时候，进行通知
			// 观察者 被观察者  
			//经典案例：订报纸：（报社【发布者】，订阅者）
			//发布者  被观察者
			var Publish = function( name ){
				this.name = name;
				this.subscribers = [];//接受所有的订阅者的数组 （每一个元素都是函数类型的fn）
				
			};
			//publish类的实例对象去发布消息
			Publish.prototype.deliver = function( news ){
				var publish = this;
				this.subscribers.forEach(function( fn ){
						fn( news, publish);//把新消息发给订阅者
				});
				return this;//链式编程
			};
			
			//订阅报纸的方法
			Function.prototype.subscriber = function(publish){
				var sub = this;//取得具体订阅者这个人 z3
				//some:循环变量数组的每一个元素 执行一个函数，如果其中有一个返回true,那么整体返回true
				var alreadyExists = publish.subscribers.some(function(item){
					return sub === item;
				});
				//如果当前出版社里不存在这个人 则将这个人加入其中
				if( !alreadyExists ){
					publish.subscribers.push( this );
				}
				
				return this;
				
			}
			
			
			//具体的一个订阅者取消订阅报纸的方法
			Function.prototype.unsubscribe = function( publish ){
				var sub = this;
				//filter  过滤函数 循环变量数组的每一个元素 执行一个函数,如果不匹配 则删除该元素
				publish.subscribers = publish.subscribers.filter( function(item){//返回新的数组
					return item !== sub;
				});
				return this;
			}
			
			window.onload = function(){
				//实例化发布者对象 （报社对象 被观察者）
				var pub1 = new  Publish('1报社');
				var pub2 = new  Publish('2报社');
				var pub3 = new  Publish('3报社');
				
				//观察者（订阅者）
				var sub1 = function( news ){
					document.getElementById('sub1').innerHTML += arguments[1].name + ':' + news + '\n';
				};
				var sub2 = function( news ){
					document.getElementById('sub2').innerHTML += arguments[1].name + ':' + news + '\n';
				};
				
				
				sub1.subscriber( pub1).subscriber(pub2).subscriber(pub3);
				sub2.subscriber(pub1).subscriber(pub2);
				
				//事件的绑定 
				
				BH.EventUtil.addHandler( document.getElementById('pub1'),'click', function(){
					pub1.deliver( document.getElementById('text1').value);
				});
				BH.EventUtil.addHandler( document.getElementById('pub2'),'click', function(){
					pub2.deliver( document.getElementById('text2').value);
				});
				BH.EventUtil.addHandler( document.getElementById('pub3'),'click', function(){
					pub3.deliver( document.getElementById('text3').value);
				});
				
				sub1.unsubscribe( pub1);//取消订阅
				
			}
			
			
			
		</script>
	</head>
	<body>
		<input id="pub1" type="button" value="1报社" /><input id="text1" value=""/><br>
		<input id="pub2" type="button" value="2报社" /><input id="text2" value=""/><br>
		<input id="pub3" type="button" value="3报社" /><input id="text3" value=""/><br>
		
		<textarea id="sub1" rows="5" cols="30"></textarea>
		<textarea id="sub2" rows="5" cols="30"></textarea>
		
	</body>
</html>
